import random
from aiogram import Bot, Dispatcher, F
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart
from aiogram.types import KeyboardButton, ReplyKeyboardMarkup, ReplyKeyboardRemove, Message, KeyboardButtonPollType
from aiogram.utils.keyboard import ReplyKeyboardBuilder

TOKEN = "6907074579:AAFJOtvMEDN8ewOVP4XnxOxWyZY-OTjLXXM"

# –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç—ã –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()

kb_builder = ReplyKeyboardBuilder()
start_buttons = [
    KeyboardButton(text="—Ö–æ—á—É —Å—ã–≥—Ä–∞—Ç—å"),
    KeyboardButton(text="–Ω–µ —Ö–æ—á—É")
]
kb_builder.row(*start_buttons, width=2)

@dp.message(CommandStart())
async def process_start_command(message: Message):
    await message.answer(
        text='–ü—Ä–∏–≤–µ—Ç, —Ö–æ—á—É –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å —Ç–µ–±–µ —Å—ã–≥—Ä–∞—Ç—å –≤ –∫–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞',
        reply_markup=kb_builder.as_markup(resize_keyboard=True, one_time_keyboard=True)
    )

@dp.message(F.text.lower().in_(["—Ö–æ—á—É —Å—ã–≥—Ä–∞—Ç—å", "–µ—â–µ –æ–¥–∏–Ω —Ä–∞—É–Ω–¥"]))
async def process_start_command(message: Message):
    builder = ReplyKeyboardBuilder()
    action_buttons = [
        KeyboardButton(text="–∫–∞–º–µ–Ω—å"),
        KeyboardButton(text="–Ω–æ–∂–Ω–∏—Ü—ã"),
        KeyboardButton(text="–±—É–º–∞–≥–∞")
    ]
    builder.row(*action_buttons, width=3)
    await message.answer(
        text='–í—ã–±–µ—Ä–∏ —Å–≤–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –∏ –Ω–∞–∂–º–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É. –ü–æ–∫–∞ –¥—É–º–∞–µ—à—å, —è –ø–æ–¥–±–µ—Ä—É —Å–≤–æ–π',
        reply_markup=builder.as_markup(resize_keyboard=True, one_time_keyboard=True)
    )

@dp.message(F.text.lower().in_(["–Ω–µ —Ö–æ—á—É", "–º–Ω–µ –Ω–∞–¥–æ–µ–ª–æ"]))
async def process_start_command(message: Message):
    await message.answer(
        text='–ó–∞—Ö–æ–¥–∏ –∫–∞–∫ –±—É–¥–µ—à—å –≥–æ—Ç–æ–≤',
    )


@dp.message(F.text.lower().in_(["–∫–∞–º–µ–Ω—å", "–Ω–æ–∂–Ω–∏—Ü—ã", "–±—É–º–∞–≥–∞"]))
async def process_start_command(message: Message):
    retry_builder = ReplyKeyboardBuilder()
    retry_buttons = [
        KeyboardButton(text="–µ—â–µ –æ–¥–∏–Ω —Ä–∞—É–Ω–¥"),
        KeyboardButton(text="–º–Ω–µ –Ω–∞–¥–æ–µ–ª–æ"),
    ]
    retry_builder.row(*retry_buttons)
    user_choice = message.text.lower()
    output_pattern = ["–∫–∞–º–µ–Ω—å", "–Ω–æ–∂–Ω–∏—Ü—ã", "–±—É–º–∞–≥–∞"]
    bot_choice = random.choice(output_pattern)
    if user_choice == bot_choice:
        result = "–ù–∏—á—å—è!"
    elif (user_choice == "–∫–∞–º–µ–Ω—å" and bot_choice == "–Ω–æ–∂–Ω–∏—Ü—ã") or \
         (user_choice == "–Ω–æ–∂–Ω–∏—Ü—ã" and bot_choice == "–±—É–º–∞–≥–∞") or \
         (user_choice == "–±—É–º–∞–≥–∞" and bot_choice == "–∫–∞–º–µ–Ω—å"):
        result = "–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!"
    else:
        result = "–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!"
    await message.answer(
        text=f"–í—ã –≤—ã–±—Ä–∞–ª–∏: {user_choice}\n–ë–æ—Ç –≤—ã–±—Ä–∞–ª: {bot_choice}\n<b>{result}</b>\n<i>–ü—Ä–µ–¥–ª–∞–≥–∞—é —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑, –Ω–µ —Ö–æ—á–µ—à—å?</i>",
        reply_markup=retry_builder.as_markup(resize_keyboard=True, one_time_keyboard=True)
    )



if __name__ == '__main__':
    dp.run_polling(bot)


LEXICON_RU: dict[str, str] = {
    '/start': '<b>–ü—Ä–∏–≤–µ—Ç!</b>\n–î–∞–≤–∞–π —Å —Ç–æ–±–æ–π —Å—ã–≥—Ä–∞–µ–º –≤ –∏–≥—Ä—É '
              '"–ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞"?\n\n–ï—Å–ª–∏ —Ç—ã, –≤–¥—Ä—É–≥, '
              '–∑–∞–±—ã–ª –ø—Ä–∞–≤–∏–ª–∞, –∫–æ–º–∞–Ω–¥–∞ /help —Ç–µ–±–µ –ø–æ–º–æ–∂–µ—Ç!\n\n<b>–ò–≥—Ä–∞–µ–º?</b>',
    '/help': '–≠—Ç–æ –æ—á–µ–Ω—å –ø—Ä–æ—Å—Ç–∞—è –∏–≥—Ä–∞. –ú—ã –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –¥–æ–ª–∂–Ω—ã '
             '—Å–¥–µ–ª–∞—Ç—å –≤—ã–±–æ—Ä –æ–¥–Ω–æ–≥–æ –∏–∑ —Ç—Ä–µ—Ö –ø—Ä–µ–¥–º–µ—Ç–æ–≤. –ö–∞–º–µ–Ω—å, '
             '–Ω–æ–∂–Ω–∏—Ü—ã –∏–ª–∏ –±—É–º–∞–≥–∞.\n\n–ï—Å–ª–∏ –Ω–∞—à –≤—ã–±–æ—Ä '
             '—Å–æ–≤–ø–∞–¥–∞–µ—Ç - –Ω–∏—á—å—è, –∞ –≤ –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å–ª—É—á–∞—è—Ö –∫–∞–º–µ–Ω—å '
             '–ø–æ–±–µ–∂–¥–∞–µ—Ç –Ω–æ–∂–Ω–∏—Ü—ã, –Ω–æ–∂–Ω–∏—Ü—ã –ø–æ–±–µ–∂–¥–∞—é—Ç –±—É–º–∞–≥—É, '
             '–∞ –±—É–º–∞–≥–∞ –ø–æ–±–µ–∂–¥–∞–µ—Ç –∫–∞–º–µ–Ω—å.\n\n<b>–ò–≥—Ä–∞–µ–º?</b>',
    'rock': '–ö–∞–º–µ–Ω—å üóø',
    'paper': '–ë—É–º–∞–≥–∞ üìú',
    'scissors': '–ù–æ–∂–Ω–∏—Ü—ã ‚úÇ',
    'yes_button': '–î–∞–≤–∞–π!',
    'no_button': '–ù–µ —Ö–æ—á—É!',
    'other_answer': '–ò–∑–≤–∏–Ω–∏, —É–≤—ã, —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –º–Ω–µ –Ω–µ–ø–æ–Ω—è—Ç–Ω–æ...',
    'yes': '–û—Ç–ª–∏—á–Ω–æ! –î–µ–ª–∞–π —Å–≤–æ–π –≤—ã–±–æ—Ä!',
    'no': '–ñ–∞–ª—å...\n–ï—Å–ª–∏ –∑–∞—Ö–æ—á–µ—à—å —Å—ã–≥—Ä–∞—Ç—å, –ø—Ä–æ—Å—Ç–æ —Ä–∞–∑–≤–µ—Ä–Ω–∏ '
          '–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∏ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É "–î–∞–≤–∞–π!"',
    'bot_won': '–Ø –ø–æ–±–µ–¥–∏–ª!\n\n–°—ã–≥—Ä–∞–µ–º –µ—â–µ?',
    'user_won': '–¢—ã –ø–æ–±–µ–¥–∏–ª! –ü–æ–∑–¥—Ä–∞–≤–ª—è—é!\n\n–î–∞–≤–∞–π —Å—ã–≥—Ä–∞–µ–º –µ—â–µ?',
    'nobody_won': '–ù–∏—á—å—è!\n\n–ü—Ä–æ–¥–æ–ª–∂–∏–º?',
    'bot_choice': '–ú–æ–π –≤—ã–±–æ—Ä'
}